fragSize <- fragSizeDist(bamfile, bamfile.labels)
View(fragSize)
help(scanBam)
help(scanSam)
help(readSamFile)
library(ChIPseeker)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(bedr)
TTS_region <- bed_to_granges("TTS.bed", header = FALSE)
TTS_region <- bed_to_granges("TTS.bed", header = FALSE)
TTS_region
names(TTS_region)
id(TTS_region)
ids(TTS_region)
ranges(TTS_region)
library(ChIPseeker)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
seqlevels(txdb) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
library(clusterProfiler)
promoter <- getPromoters(TxDb=txdb, upstream=2000, downstream=2000)
seqlevels(promoter) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
ranges(promoter)
mcols(TTS_region)
elementMetadata(TTS_region)
strand(TTS_region) <- mcols(TTS_region)
strand(TTS_region)
mcols(TTS_region)
as.vector(mcols(TTS_region))
mcols(TTS_region)
read.table("TTS.bed")
promoter
colnames(TTS_region) <- c("chr", "start", "end", "strand")
TTS_region
TTS_region <- read.table("TTS.bed")
colnames(TTS_region) <- c("chr", "start", "end", "strand")
TTS_region
TTS_region$chr
makeGRangesFromDataFrame(TTS_region)
TTS_region
TTS_region <- makeGRangesFromDataFrame(TTS_region)
TTS_region
knitr::opts_chunk$set(echo = TRUE)
data = read.table("10k_leaf_ATAC_rep1_readcount.txt");
data
rep1_10k <- read.table("10k_leaf_ATAC_rep1_readcount.txt")
colnames(rep1_10k) <- c("chr", "start", "end", "read_count", "coverage", "length", "fraction")
rep2_10k <- read.table("10k_leaf_ATAC_rep2_readcount.txt")
colnames(rep2_10k) <- c("chr", "start", "end", "read_count", "coverage", "length", "fraction")
rep1_10k
rep1_10k$read_count
fit = lm(rep1_10k$read_count~rep2_10k$read_count)
plot(rep1_10k$read_count, rep2_10k$read_count, col='blue',xlab='rep1',ylab='rep2')
abline(fit,col='red')
log2(rep1_10k$read_count)
fit = lm(log2(rep1_10k$read_count)~log2(rep2_10k$read_count))
plot(log2(rep1_10k$read_count), log2(rep2_10k$read_count), col='blue',xlab='rep1',ylab='rep2')
abline(fit,col='red')
fit
fit = lm(log2(rep2_10k$read_count)~log2(rep1_10k$read_count))
plot(log2(rep1_10k$read_count), log2(rep2_10k$read_count), col='blue',xlab='rep1',ylab='rep2')
abline(fit,col='red')
cor.test(log2(rep1_10k$read_count), log2(rep2_10k$read_count), method="pearson")
rep1_10k <- read.table("10k_leaf_ATAC_rep1_readcount.txt")
colnames(rep1_10k) <- c("chr", "start", "end", "read_count", "coverage", "length", "fraction")
rep2_10k <- read.table("10k_leaf_ATAC_rep2_readcount.txt")
colnames(rep2_10k) <- c("chr", "start", "end", "read_count", "coverage", "length", "fraction")
cor.test(log2(rep1_10k$read_count), log2(rep2_10k$read_count), method="pearson")
fit = lm(log2(rep2_10k$read_count)~log2(rep1_10k$read_count))
plot(log2(rep1_10k$read_count), log2(rep2_10k$read_count), col='blue',xlab='rep1',ylab='rep2')
abline(fit,col='red')
reps <- data.frame(rep1 = log2(rep1$read_count), rep2 = log2(rep2$read_count))
rep1 <- read.table("10k_leaf_ATAC_rep1_readcount.txt")
colnames(rep1) <- c("chr", "start", "end", "read_count", "coverage", "length", "fraction")
rep2 <- read.table("10k_leaf_ATAC_rep2_readcount.txt")
colnames(rep2) <- c("chr", "start", "end", "read_count", "coverage", "length", "fraction")
reps <- data.frame(rep1 = log2(rep1$read_count), rep2 = log2(rep2$read_count))
ggplot(reps, aes(x = rep1, y = rep2)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
library(ggplot2)
reps <- data.frame(rep1 = log2(rep1$read_count), rep2 = log2(rep2$read_count))
ggplot(reps, aes(x = rep1, y = rep2)) +
geom_point() +
stat_smooth(method = "lm", col = "red")
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))
}
fit <- lm(rep2 ~ rep1, data = reps)
ggplotRegression(fit)
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4])))
}
fit <- lm(rep2 ~ rep1, data = reps)
ggplotRegression(fit)
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5)))
}
fit <- lm(rep2 ~ rep1, data = reps)
ggplotRegression(fit)
ggplotRegression <- function (fit) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5)))
}
fit <- lm(rep2 ~ rep1, data = reps)
ggplotRegression(fit)
summary(fit)
ggplotRegression <- function (fit) {
require(ggplot2)
print(summary(fit))
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5)))
}
fit <- lm(rep2 ~ rep1, data = reps)
ggplotRegression(fit)
knitr::opts_chunk$set(echo = TRUE)
library(ChIPpeakAnno)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak", format="BED", header=FALSE)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData)
anno
write.table(anno, "wt_a4_vs_un_peaks_annotation.txt")
library(ChIPpeakAnno)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData)
write.table(anno, "wt_a4_vs_un_peaks_annotation.txt")
peaks <- toGRanges("wt_kv_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData)
write.table(anno, "wt_kv_vs_un_peaks_annotation.txt")
knitr::opts_chunk$set(echo = TRUE)
library(ChIPpeakAnno)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData)
write.table(anno, "wt_a4_vs_un_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_kv_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData)
write.table(anno, "wt_kv_vs_un_peaks_annotation.txt", quote = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(ChIPpeakAnno)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 300))
anno
library(ChIPpeakAnno)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 300))
write.table(anno, "wt_a4_vs_un_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_kv_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 300))
write.table(anno, "wt_kv_vs_un_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "wt_a4_vs_un_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_kv_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "wt_kv_vs_un_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_a4_vs_mk_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "wt_a4_vs_mk_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_kv_vs_mk_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "wt_kv_vs_mk_peaks_annotation.txt", quote = FALSE)
setwd("~/Desktop/atac/diff_peaks")
knitr::opts_chunk$set(echo = TRUE)
library(ChIPpeakAnno)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS")
write.table(anno, "wt_a4_vs_un_peaks_annotation_2.txt", quote = FALSE)
anno
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
FeatureLocForDistance="TSS")
write.table(anno, "wt_a4_vs_un_peaks_annotation_2.txt", quote = FALSE)
anno
anno
library(ChIPpeakAnno)
peaks <- toGRanges("wt_a4_vs_un_peaks.narrowPeak.bed", format="BED", header=FALSE)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
FeatureLocForDistance="start")
write.table(anno, "wt_a4_vs_un_peaks_annotation_2.txt", quote = FALSE)
anno
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="upstream")
write.table(anno, "wt_a4_vs_un_peaks_annotation_2.txt", quote = FALSE)
anno
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="upstream", multiple = TRUE)
write.table(anno, "wt_a4_vs_un_peaks_annotation_2.txt", quote = FALSE)
anno
peaks <- toGRanges("setiwt_e2_vs_mk_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "setiwt_e2_vs_mk_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("setiwt_e2_vs_setikv_e2_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "setiwt_e2_vs_setikv_e2_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_un_vs_a4_peaks.narrowPeak.bed", format="BED", header=FALSE)
annoData <- toGRanges(txdb)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "wt_un_vs_a4_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("wt_un_vs_kv_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "wt_un_vs_kv_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("setiwt_mk_vs_e2_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "setiwt_mk_vs_e2_peaks_annotation.txt", quote = FALSE)
peaks <- toGRanges("setikv_e2_vs_setiwt_e2_peaks.narrowPeak.bed", format="BED", header=FALSE)
seqlevelsStyle(peaks) <- seqlevelsStyle(annoData)
anno <- annotatePeakInBatch(peaks, AnnotationData=annoData,
output="overlapping",
FeatureLocForDistance="TSS",
bindingRegion=c(-2000, 1000))
write.table(anno, "setikv_e2_vs_setiwt_e2_peaks_annotation.txt", quote = FALSE)
knitr::opts_chunk$set(echo = TRUE)
# loading packages
library(ChIPseeker)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
seqlevels(txdb) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
library(clusterProfiler)
setwd("~/Desktop/atac/chipseeker_removeCM")
promoter <- getPromoters(TxDb=txdb, upstream=2000, downstream=2000)
seqlevels(promoter) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
files <- c("../macs2_reps_input/setiwt_e2_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/setiwt_mk_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/setiwt_un_peaks.narrowPeak_removeCM.bed"
)
tagMatrixList <- lapply(files, getTagMatrix, windows=promoter)
names(tagMatrixList) <- c("setiwt_e2_original",
"setiwt_mk_original",
"setiwt_un_original"
)
library(ggplot2)
library(bedr)
p <- plotAvgProf(tagMatrixList, xlim=c(-2000, 2000), origin_label = "TSS")
p <- p + scale_color_manual(values=c("#009E73", "#E69F00", "black"))
p
TTS_region
TTS_region <- read.table("TTS.bed")
colnames(TTS_region) <- c("chr", "start", "end", "strand")
TTS_region <- makeGRangesFromDataFrame(TTS_region)
TTS_region
TTS_region <- read.table("TTS.bed")
colnames(TTS_region) <- c("chr", "start", "end", "strand")
TTS_region <- makeGRangesFromDataFrame(TTS_region)
seqlevels(TTS_region) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
tagMatrixList_TTS <- lapply(files, getTagMatrix, windows=TTS_region)
names(tagMatrixList_TTS) <- c("setiwt_e2_original",
"setiwt_mk_original",
"setiwt_un_original"
)
p <- plotAvgProf(tagMatrixList_TTS, xlim=c(-2000, 2000), origin_label = "TTS")
p <- p + scale_color_manual(values=c("#009E73", "#E69F00", "black"))
p
promoter
TTS_region <- read.table("TTS.bed")
colnames(TTS_region) <- c("chr", "start", "end", "strand")
TTS_region <- makeGRangesFromDataFrame(TTS_region)
seqlevels(TTS_region) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
tagMatrixList_TTS <- lapply(files, getTagMatrix, windows=TTS_region)
names(tagMatrixList_TTS) <- c("setiwt_e2_original",
"setiwt_mk_original",
"setiwt_un_original"
)
p <- plotAvgProf(tagMatrixList_TTS, xlim=c(-2000, 2000), origin_label = "TTS")
p <- p + scale_color_manual(values=c("#009E73", "#E69F00", "black"))
p
knitr::opts_chunk$set(echo = TRUE)
```{r}
library(ChIPseeker)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
seqlevels(txdb) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
library(clusterProfiler)
promoter <- getPromoters(TxDb=txdb, upstream=2000, downstream=2000)
seqlevels(promoter) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
files <- c("../macs2_reps_input/wt_a4_4h_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/wt_kv_4h_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/wt_mk_4h_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/wt_un_peaks.narrowPeak_removeCM.bed"
)
peakAnnoList <- lapply(files, annotatePeak, TxDb=txdb,
tssRegion=c(-2000, 1000), verbose=FALSE)
genes= lapply(peakAnnoList, function(i) as.data.frame(i)$geneId)
names(genes) <- c("wt_a4_4h",
"wt_kv_4h",
"wt_mk_4h",
"wt_un"
)
genes
vennplot(genes)
write.table(genes, file = "wt_original_chipseeker_venn.csv")
genes$wt_un
genes$wt_a4_4h
genes$wt_kv_4h
genes$wt_mk_4h
genes$wt_un
write.table(genes$wt_a4_4h, file="wt_a4_4h_original_peak_venn.csv")
write.table(genes$wt_a4_4h, file="wt_a4_4h_original_peak_venn.csv")
write.table(genes$wt_kv_4h, file="wt_kv_4h_original_peak_venn.csv")
write.table(genes$wt_mk_4h, file="wt_mk_4h_original_peak_venn.csv")
write.table(genes$wt_un, file="wt_un_original_peak_venn.csv")
library(ChIPseeker)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
seqlevels(txdb) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
library(clusterProfiler)
promoter <- getPromoters(TxDb=txdb, upstream=2000, downstream=2000)
seqlevels(promoter) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
files <- c("../macs2_reps_input/setiwt_e2_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/setiwt_mk_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/setiwt_un_peaks.narrowPeak_removeCM.bed"
)
peakAnnoList <- lapply(files, annotatePeak, TxDb=txdb,
tssRegion=c(-2000, 1000), verbose=FALSE)
genes= lapply(peakAnnoList, function(i) as.data.frame(i)$geneId)
names(genes) <- c("setiwt_e2",
"setiwt_mk",
"setiwt_un"
)
write.table(genes$setiwt_e2, file="setiwt_e2_original_peak_venn.csv")
write.table(genes$setiwt_mk, file="setiwt_mk_original_peak_venn.csv")
write.table(genes$setiwt_un, file="setiwt_un_original_peak_venn.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ChIPseeker)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
seqlevels(txdb) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
library(clusterProfiler)
promoter <- getPromoters(TxDb=txdb, upstream=2000, downstream=2000)
seqlevels(promoter) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
files <- c("../macs2_reps_input/setikv_e2_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/setikv_mk_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/setikv_un_peaks.narrowPeak_removeCM.bed"
)
peakAnnoList <- lapply(files, annotatePeak, TxDb=txdb,
tssRegion=c(-2000, 1000), verbose=FALSE)
genes= lapply(peakAnnoList, function(i) as.data.frame(i)$geneId)
names(genes) <- c("setikv_e2",
"setikv_mk",
"setikv_un"
)
write.table(genes$setikv_e2, file="setikv_e2_original_peak_venn.csv")
write.table(genes$setikv_mk, file="setikv_mk_original_peak_venn.csv")
write.table(genes$setikv_un, file="setikv_un_original_peak_venn.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ChIPseeker)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
seqlevels(txdb) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
library(clusterProfiler)
promoter <- getPromoters(TxDb=txdb, upstream=2000, downstream=2000)
seqlevels(promoter) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
files <- c("../macs2_reps_input/wt_a4_4h_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/wt_kv_4h_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/wt_mk_4h_peaks.narrowPeak_removeCM.bed",
"../macs2_reps_input/wt_un_peaks.narrowPeak_removeCM.bed"
)
tagMatrixList <- lapply(files, getTagMatrix, windows=promoter)
names(tagMatrixList) <- c("wt_a4_4h_original",
"wt_kv_4h_original",
"wt_mk_4h_original",
"wt_un_original"
)
library(ggplot2)
library(bedr)
p <- plotAvgProf(tagMatrixList, xlim=c(-2000, 2000), origin_label = "TSS")
p <- p + scale_color_manual(values=c("#D55E00", "#0072B2", "#E69F00", "black"))
p
TTS_region <- read.table("TTS.bed")
colnames(TTS_region) <- c("chr", "start", "end", "strand")
TTS_region <- makeGRangesFromDataFrame(TTS_region)
seqlevels(TTS_region) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
tagMatrixList_TTS <- lapply(files, getTagMatrix, windows=TTS_region)
names(tagMatrixList_TTS) <- c("wt_a4_4h_original",
"wt_kv_4h_original",
"wt_mk_4h_original",
"wt_un_original"
)
p <- plotAvgProf(tagMatrixList_TTS, xlim=c(-2000, 2000), origin_label = "TTS")
p <- p + scale_color_manual(values=c("#D55E00", "#0072B2", "#E69F00", "black"))
p
tagHeatmap(tagMatrixList, xlim=c(-2000, 2000), color=c("#D55E00", "#0072B2", "#E69F00", "black"))
plotAnnoBar(annotatePeak(files[1], tssRegion=c(-2000, 1000),TxDb=txdb))
peakAnnoList <- lapply(files, annotatePeak, TxDb=txdb,
tssRegion=c(-2000, 1000), verbose=FALSE)
genes= lapply(peakAnnoList, function(i) as.data.frame(i)$geneId)
names(genes) <- c("wt_a4_4h",
"wt_kv_4h",
"wt_mk_4h",
"wt_un"
)
vennplot(genes)
library(UpSetR)
upset(fromList(genes), order.by = "freq")
knitr::opts_chunk$set(echo = TRUE)
library(ChIPseeker)
library(TxDb.Athaliana.BioMart.plantsmart28)
txdb <- TxDb.Athaliana.BioMart.plantsmart28
seqlevels(txdb) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
library(clusterProfiler)
promoter <- getPromoters(TxDb=txdb, upstream=2000, downstream=2000)
seqlevels(promoter) <- c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5", "mitochondria", "chloroplast")
files <- c("../input_data/for_annotation/setiwt_e2_peaks.narrowPeak.bed",
"../input_data/for_annotation/setiwt_mk_peaks.narrowPeak.bed",
"../input_data/for_annotation/setiwt_un_peaks.narrowPeak.bed"
)
tagMatrixList <- lapply(files, getTagMatrix, windows=promoter)
setwd("~/Plant_Innate_Immunity_ATAC-seq/ACR_annotation")
